function [cmap,cLimit,key] = defaultSnowColormap(snowFractionOrSnowDepth,maxValue)
% cmap = defaultSnowColormap(snowFractionOrSnowDepth,maxValue);
%
% snowFractionOrSnowDepth, 'snowF','snowD' or 'snowW'
% maxValue, for example 50 cm for snow depth and 150 mm for SWE
%
% example
%   file = 'E:\Data\hdf\FY3B_MWRIX_GBAL_L2_SWE_MLT_ESD_20180222_AOAD_025KM_MS.HDF';
%   data = h5read(file,'/SD_NorthernDaily_A');
%   valueRange = h5readatt(file,'/SD_NorthernDaily_A','valid_range');
%   divide_factor = h5readatt(file,'/SD_NorthernDaily_A','Slope');
%   add_factor = h5readatt(file,'/SD_NorthernDaily_A','Intercept');
%   index = data>valueRange(1) & data<=valueRange(2);
%   data = double(data);data(index) = data(index)/divide_factor+add_factor;
%   valueMax = prctile(data(index),90);
%   [cmap, cLimit] = defaultSnowColormap('snowD',valueMax);
%   figure
%   imagesc(data),colormap(cmap),caxis(cLimit),axis equal tight
%
narginchk(0,2)
nargoutchk(1,3)

if nargin ==0 || (nargin>0 && isempty(snowFractionOrSnowDepth))
    flag = 'snowF';
else
    flag = snowFractionOrSnowDepth;
    if isstring(flag),flag = char(snowFractionOrSnowDepth);end
    assert(ischar(flag)&&length(flag)>=4,...
        'input must be characters (>=4)')
end
if nargin>1
    validateattributes(maxValue,{'numeric'},{'scalar'},mfilename,'maxValue',2)
    maxValue = ceil(maxValue);
else
    maxValue = [];
end

flag = flag(1:5);
nColors = 256;
maxSD = 50; % cm
validSD = 240;

maxSWE = 100; % mm
validSWE = 240; %#ok<NASGU>

defGrey  = [.75 .75 .67];
defDark  = [.55 .55 .57];
defDark2  = [100 100 100]/255;
defBlue  = [0   .50 .70];
defBlue2  = [0   .23 .42]; %#ok<NASGU>
defBlue3  = [30   255 249]/255;
defRed   = [.74 0   0  ];
defBlack = [0   0   0  ];
defWhite = [1   1   1  ];
defYellow = [250,250,150]/255;
defPink = [245,180,210]/255;

% MOD10A1 Snow Cover product
keyMissing = 200;
keyNodecision = 201;
keyNight = 211;
keyLake = 237;
keyOcean = 239;
keyCloud = 250;
keySaturation = 254;

keyFill = 255;

keyLand = 0;

% FY-3 MWRI Snow Depth Product
keyWater = 254;
keyIce = 253;
keyImpossible = 252;
keyColdRain = 251;
keyRain = 250;
keyWetSnow = 249;
keyOffEarth = 248;
keyIncorrectAltitude = 247;
keyUnvalidated = 241;
key = [];
if strcmpi(flag,'snowF')
    
    cmap = zeros(nColors,3);
    offset = 1;
    cmap(keyLand + offset,:) = defGrey;
    cmap(keyMissing + offset,:) = defYellow;
    cmap(keyNodecision + offset,:) = defYellow;
    cmap(keyNight + offset,:) = defBlack;
    cmap(keyLake + offset,:) = defBlack;
    cmap(keyOcean + offset,:) = defBlack;
    cmap(keyCloud + offset,:) = defRed;
    cmap(keySaturation + offset,:) = defYellow;
    cmap(keyFill + offset,:) = defDark2;
    
    cmap((1:100)+offset,:) = BuGnYl(100);
    cLimit = [0 255];
    key = sprintf(['----------------------------- ','\n',...
    'The key to meaning of data values','\n',...
    'The possible range of fSCA is [0,100] ','\n',...
    '   0 = snow-free land surface','\n',...
    '   1-100 = fractional snow-covered area','\n',...
    '   101 = reserved value for land ice','\n',...
    '   102 = reserved value for glacier','\n',...
    '   103 = reserved value for perennial snow cover','\n',...
    '   104 = reserved value for dirty snow','\n',...
    '   105 = reserved value for colored snow','\n',...
    '   110 = reserved value for lake ice','\n',...
    '   111 = reserved value for snow over lake ice','\n',...
    '   120 = reserved value for sea ice','\n',...
    '   121 = reserved value for snow over sea ice','\n',...
    '   200 = missing data','\n',...
    '   201 = no decision','\n',...
    '   211 = night','\n',...
    '   220 = reserved value for impossible snow-covered area','\n',...
    '   237 = inland water body','\n',...
    '   239 = ocean','\n',...
    '   250 = cloud','\n',...
    '   254 = detector saturated','\n',...
    '   255 = fill','\n',...
    '----------------------------- ','\n']);
elseif strcmpi(flag,'snowD') || strcmpi(flag,'snowW')
    if isempty(maxValue)
        if strcmpi(flag,'snowD')
            maxValue = maxSD;
        else
            maxValue = maxSWE;
        end
    end
    cmap = zeros(nColors,3);
    offset = 1;
    cmap(keyLand + offset,:) = defGrey;
    cmap((1:maxValue) + offset,:) = othercolor('PuBu9',maxValue);
    cmap((maxValue+1:validSD) + offset,:) = ...
        cmap((maxValue + offset)*ones(1,validSD-maxValue),:);
    cmap(keyIce + offset,:) = defPink;
    cmap(keyWater + offset,:) = defBlue3;
    cmap(keyImpossible + offset,:) = defGrey;
    cmap(keyOffEarth + offset,:) = defWhite;
    cmap(keyFill + offset,:) = defDark;
    cLimit = [0 255];
else
    warning('unrecognizied input')
    cmap = [];
end

function colors = BuGnYl(n)
narginchk(0,1)
if nargin==0
    n = 100;
end
assert(isscalar(n)&&n>0&&n<256,'input a scalar with values in [0 256]')

YIGnBu64 = [9,28,89;...
    9,29,90;...
    10,30,91;...
    11,31,94;...
    12,32,95;...
    13,33,96;...
    14,33,99;...
    15,34,102;...
    15,36,103;...
    16,35,104;...
    17,35,107;...
    19,37,109;...
    20,38,112;...
    20,38,112;...
    21,39,115;...
    22,40,116;...
    23,40,118;...
    24,41,121;...
    24,43,122;...
    24,42,124;...
    26,43,125;...
    27,44,126;...
    28,44,129;...
    30,46,131;...
    30,46,133;...
    31,47,135;...
    32,47,138;...
    33,48,139;...
    34,49,140;...
    35,50,143;...
    36,51,144;...
    36,51,146;...
    37,51,148;...
    37,53,149;...
    36,55,149;...
    37,56,150;...
    37,58,151;...
    38,59,152;...
    36,59,152;...
    36,61,153;...
    36,63,154;...
    37,64,155;...
    35,65,155;...
    36,66,154;...
    36,68,155;...
    35,69,156;...
    36,70,157;...
    36,72,158;...
    37,73,161;...
    36,74,157;...
    35,76,158;...
    35,77,161;...
    36,78,162;...
    35,80,161;...
    34,81,161;...
    35,82,162;...
    35,84,163;...
    36,85,164;...
    35,86,165;...
    34,87,165;...
    33,89,166;...
    34,90,167;...
    34,92,166;...
    34,94,167;...
    34,94,167;...
    34,96,169;...
    34,96,169;...
    36,100,172;...
    33,100,171;...
    33,101,172;...
    34,104,173;...
    32,105,173;...
    34,107,175;...
    33,108,175;...
    32,110,176;...
    32,112,175;...
    32,113,178;...
    31,115,179;...
    32,116,180;...
    32,118,179;...
    32,121,181;...
    31,121,181;...
    30,123,182;...
    31,124,183;...
    31,126,184;...
    31,127,185;...
    30,129,186;...
    30,131,185;...
    31,132,186;...
    30,134,187;...
    30,136,188;...
    30,138,187;...
    29,139,188;...
    29,141,191;...
    30,142,192;...
    28,143,190;...
    29,145,192;...
    30,146,193;...
    30,147,191;...
    31,148,192;...
    34,149,193;...
    35,150,194;...
    36,152,193;...
    37,153,194;...
    38,154,193;...
    39,155,194;...
    40,156,193;...
    41,158,193;...
    42,159,194;...
    43,160,195;...
    44,161,194;...
    45,162,195;...
    46,164,194;...
    47,165,193;...
    48,166,192;...
    49,167,193;...
    52,167,194;...
    53,168,195;...
    54,170,195;...
    56,172,195;...
    57,173,196;...
    57,174,194;...
    58,175,195;...
    59,176,194;...
    60,177,195;...
    62,179,196;...
    63,180,197;...
    64,182,196;...
    65,183,197;...
    67,183,196;...
    69,183,194;...
    71,183,195;...
    73,185,196;...
    75,186,195;...
    77,186,193;...
    79,188,195;...
    81,188,194;...
    83,188,192;...
    84,189,193;...
    86,190,193;...
    87,191,194;...
    89,191,193;...
    92,192,192;...
    94,192,191;...
    95,193,192;...
    98,194,192;...
    100,195,191;...
    101,196,190;...
    104,196,191;...
    106,197,190;...
    108,198,189;...
    109,199,190;...
    112,199,190;...
    113,201,189;...
    115,201,190;...
    117,201,188;...
    120,202,188;...
    121,204,188;...
    123,204,189;...
    125,203,187;...
    127,206,187;...
    129,206,186;...
    132,207,187;...
    134,208,183;...
    136,210,187;...
    137,209,185;...
    141,211,187;...
    143,212,184;...
    146,212,185;...
    147,213,185;...
    150,215,185;...
    152,215,184;...
    155,216,183;...
    156,215,183;...
    160,217,184;...
    161,218,185;...
    163,219,184;...
    165,219,183;...
    169,221,183;...
    170,222,183;...
    172,222,184;...
    175,223,183;...
    177,224,182;...
    178,225,181;...
    181,226,183;...
    184,227,182;...
    186,228,182;...
    187,229,181;...
    190,230,180;...
    192,230,181;...
    194,231,180;...
    198,232,181;...
    199,234,180;...
    200,233,180;...
    201,234,181;...
    204,234,180;...
    204,234,180;...
    205,235,181;...
    207,236,180;...
    207,236,178;...
    209,237,179;...
    209,237,179;...
    210,238,179;...
    213,238,180;...
    213,239,178;...
    214,240,179;...
    216,240,180;...
    216,240,178;...
    219,241,179;...
    219,241,177;...
    221,241,178;...
    222,243,178;...
    223,242,178;...
    224,243,179;...
    224,243,179;...
    225,244,178;...
    228,244,179;...
    229,246,178;...
    230,245,178;...
    231,246,177;...
    233,246,177;...
    234,247,177;...
    235,246,177;...
    236,247,178;...
    237,249,177;...
    238,248,179;...
    238,247,180;...
    239,248,181;...
    238,249,181;...
    240,249,184;...
    240,249,186;...
    241,250,187;...
    241,250,187;...
    242,250,190;...
    242,250,190;...
    242,250,191;...
    243,251,192;...
    246,251,195;...
    246,251,195;...
    246,251,195;...
    245,252,198;...
    247,252,198;...
    248,252,201;...
    248,252,202;...
    249,253,203;...
    249,253,203;...
    250,253,206;...
    250,253,208;...
    251,252,208;...
    252,253,209;...
    252,255,212;...
    252,255,212;...
    253,254,214;...
    254,255,215;...
    254,254,216;...
    255,255,217]/255;

x = 1:length(YIGnBu64);
xq = (1:n)/n*length(YIGnBu64);

colors = [interp1(x,YIGnBu64(:,1),xq)',...
    interp1(x,YIGnBu64(:,2),xq)',...
    interp1(x,YIGnBu64(:,3),xq)'];


